[
	{
		"drag": { "top": null, "left": null, "dragging": false },
		"resize": { "width": null, "height": null, "resizing": false },
		"responsive": { "valueW": 0 },
		"resizable": true,
		"draggable": true,
		"min": {},
		"max": {},
		"x": 14,
		"y": 2,
		"w": 1,
		"h": 2,
		"id": "_iwu2mp3lh",
		"name": "hello world_au1enazhs_iwu2mp3lh",
		"type": "analyser",
		"lineNumbers": true,
		"hasFocus": false,
		"theme": "monokai",
		"background": "#f0f0f0",
		"mode": "both"
	},
	{
		"drag": { "top": null, "left": null, "dragging": false },
		"resize": { "width": null, "height": null, "resizing": false },
		"responsive": { "valueW": 0 },
		"static": false,
		"resizable": true,
		"draggable": true,
		"min": {},
		"max": {},
		"x": 0,
		"y": 0,
		"w": 8,
		"h": 9,
		"id": "_xgvh156eb",
		"name": "hello world_3cquz33zu_xgvh156eb",
		"type": "grammarEditor",
		"lineNumbers": true,
		"hasFocus": false,
		"theme": "monokai",
		"background": "#AAAAAA",
    "data": "# GRAMMAR EDITOR\n\n# Lexer [or tokenizer] definition with language lexemes [or tokens]\n@{%\n\n\tconst lexer = moo.compile({ \n   \t// write the Regular Expressions for your tokens here \n    convol1:  /convol1/,                         \n    heart:    /heart/,   \n    click:    /click/,\n\t\tws: { match: /\\s+/, lineBreaks: true }\n\t});\n\n%}\n\n\n\n# Pass your lexer object using the @lexer option\n@lexer lexer\n\n\n\n# Grammar definition in the Extended Backus Naur Form (EBNF)\n\nmain -> _ Statement _\n{%\n\t// JS `arrow` function declaration\n\td => ( { \"@lang\": d[1] } )\n%}\n\nStatement -> %convol1\n{% \n  d => [{\n    '@spawn': {\n      '@sigp': {\n        '@params': [{        \n          '@sigp': { \n            '@params': [{\n                '@num': { value: 1 }\n              },\n              {\n                '@string': 'convol1'\n              }\n            ],\n            '@func': { value: 'loop'  }\n          }\n        }],\n        '@func' : {\n          value: \"dac\"\n        }\n      }\n    }\n  }]\n%}\n|\n%heart\n{% \n  d => [{\n    '@spawn': {\n      '@sigp': {\n        '@params': [{        \n          '@sigp': { \n            '@params': [{\n                '@num': { value: 1 }\n              },\n              {\n                '@string': 'heart'\n              }\n            ],\n            '@func': { value: 'loop'  }\n          }\n        }],\n        '@func' : {\n          value: \"dac\"\n        }\n      }\n    }\n  }]\n%}\n|\n%click\n{% \n  d => [{\n    '@spawn': {\n      '@sigp': {\n        '@params': [{        \n          '@sigp': { \n            '@params': [{\n                '@num': { value: 1 }\n              },\n              {\n                '@string': 'click'\n              }\n            ],\n            '@func': { value: 'loop'  }\n          }\n        }],\n        '@func' : {\n          value: \"dac\"\n        }\n      }\n    }\n  }]\n%}\n\n# Whitespace\n\n_  -> wschar:*\n{%\n\t// JS anonymous function declaration  \n\tfunction(d) { return null; } \n%}\n\n__ -> wschar:+\n{% \nfunction(d) { return null; } \n%}\n\nwschar -> %ws\n{% id %}\n"
	},
	{
		"drag": { "top": null, "left": null, "dragging": false },
		"resize": { "width": null, "height": null, "resizing": false },
		"responsive": { "valueW": 0 },
		"resizable": true,
		"draggable": true,
		"min": {},
		"max": {},
		"x": 8,
		"y": 2,
		"w": 6,
		"h": 2,
		"id": "_ont3g4uft",
		"type": "liveCodeEditor",
		"name": "hello-world_ti9ftly8u_ont3g4uft",
		"background": "#151515",
		"lineNumbers": true,
		"hasFocus": false,
		"theme": "icecoder",
		"data": "click",
		"grammarSource": "/languages/default/grammar.ne",
		"liveCodeSource": "/languages/default/code.sem"
	},

	{
		"drag": { "top": null, "left": null, "dragging": false },
		"resize": { "width": null, "height": null, "resizing": false },
		"responsive": { "valueW": 0 },
		"static": false,
		"resizable": true,
		"draggable": true,
		"min": {},
		"max": {},
		"x": 12,
		"y": 4,
		"w": 3,
		"h": 5,
		"id": "_lrgjppobq",
		"name": "hello world_2u9faflxp_lrgjppobq",
		"type": "dspCodeOutput",
		"lineNumbers": true,
		"hasFocus": false,
		"theme": "monokai",
		"background": "#fdbd9a",
		"data": ""
	},
	{
		"drag": { "top": null, "left": null, "dragging": false },
		"resize": { "width": null, "height": null, "resizing": false },
		"responsive": { "valueW": 9 },
		"static": false,
		"resizable": true,
		"draggable": true,
		"min": {},
		"max": {},
		"x": 8,
		"y": 0,
		"w": 16,
		"h": 2,
		"id": "_zb8xq8ytb",
		"name": "hello world_65sn8ifoq_zb8xq8ytb",
		"type": "grammarCompileOutput",
		"lineNumbers": true,
		"hasFocus": false,
		"theme": "monokai",
		"background": "#d1d5ff",
		"data": ""
	},
	{
		"drag": { "top": null, "left": null, "dragging": false },
		"resize": { "width": null, "height": null, "resizing": false },
		"responsive": { "valueW": 0 },
		"static": false,
		"resizable": true,
		"draggable": true,
		"min": {},
		"max": {},
		"x": 8,
		"y": 4,
		"w": 4,
		"h": 5,
		"id": "_zj92yxxn0",
		"name": "hello world_1z19h81ii_zj92yxxn0",
		"type": "liveCodeParseOutput",
		"lineNumbers": false,
		"hasFocus": false,
		"theme": "shadowfox",
		"background": "#ebdeff",
		"data": ""
	}
]
